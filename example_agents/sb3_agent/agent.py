# This file was auto-generated by `agentos init` on Aug 09, 2021 09:12:37.
import agentos
from stable_baselines3 import PPO

# A high level port of the SB3 PPO algorithm.
class SB3PPOAgent(agentos.Agent):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.sb3_ppo = PPO('MlpPolicy', self.environment)

    def learn(self):
        if self.verbose:
            print("BasicAgent is performing a rollout to improve its policy")
        #self.rollout(should_learn=True)
        self.sb3_ppo.learn(total_timesteps=10)


    def step(self):
        """Takes one action within the environment"""
        if self._should_reset:
            self.curr_obs = self.environment.reset()
            self._should_reset = False
            self.dataset.add(None, None, self.curr_obs, None, None, {})
        action = self.sb3_ppo.predict(self.curr_obs)
        prev_obs = self.curr_obs
        self.curr_obs, reward, done, info = self.environment.step(action)
        self.dataset.add(prev_obs, action, self.curr_obs, reward, done, info)
        if done:
            self._should_reset = True
        return prev_obs, action, self.curr_obs, reward, done, info

    def advance(self):
        if self.verbose:
            print("SB3PPOAgent is taking an action")
        prev_obs, action, obs, reward, done, info = self.step()
        if self.verbose:
            print("\tPrevious Observation: " + str(prev_obs))
            print("\tAction:               " + str(action))
            print("\tObservation:          " + str(obs))
            print("\tReward:               " + str(reward))
            print("\tDone:                 " + str(done))
            print("\tInfo:                 " + str(info))
            print()
        return done
